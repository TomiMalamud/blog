---
import { Picture } from '@astrojs/image/components';
import PostTags from '~/components/common/Tags.astro';
import SocialShare from '~/components/common/SocialShare.astro';
import { Schema } from 'astro-seo-schema';
import { getFormattedDate } from '~/utils/utils';
import { SITE } from '~/config.mjs';
import { getImage } from '@astrojs/image';
import { getRelativeUrlByFilePath } from '~/utils/directories';

import type { Post } from '~/types';

export interface Props {
	post: Post;
	url: string | URL;
}

const defaultImage = SITE.defaultImage
	? (
			await getImage({
				src: SITE.defaultImage,
				alt: 'Default image',
				width: 1200,
				height: 628,
			})
	  ).src
	: '';

const { post, url, image: _image = defaultImage,
 } = Astro.props;

const publishedAt = new Date(post.publishDate).toISOString()

const slug = post.canonical?.toString()

const image =
	typeof _image === 'string'
		? new URL(_image, Astro.site)
		: _image && typeof _image['src'] !== 'undefined'
		? // @ts-ignore
		  new URL(getRelativeUrlByFilePath(_image.src), Astro.site)
		: null;
---
<Schema
	item={{
		"@context": "https://schema.org",
		"@type": "BlogPosting",
		"mainEntityOfPage": {
		  "@type": "WebPage",
		  "@id": slug
		},
		"headline": post.title,
		"image": image.toString(),  
		"author": {
		  "@type": "Person",
		  "name": post.author,
		  "url": "https://blog.rohisommiers.com"
		},  
		"publisher": {
		  "@type": "Organization",
		  "name": "ROHI Sommiers",
		  "logo": {
			"@type": "ImageObject",
			"url": "https://blog.rohisommiers.com/assets/Logo.558fd22b.svg"
		  }
		},
		"datePublished": publishedAt,
		"dateModified": publishedAt,
	  }}
/>
<section class="py-4 sm:py-8 lg:py-10 mx-auto">
	<article>
		<header class={post.image ? 'text-left' : ''}>
			<PostTags tags={post.tags} class="px-4 sm:px-6 max-w-3xl mt-4 mx-auto" />
			<p class="text-sm sm:text-lg px-4 sm:px-6 max-w-3xl mt-4 mx-auto text-gray-500">
				<time datetime={String(post.publishDate)} class="ml-1">{getFormattedDate(post.publishDate)}</time> ~ 
					4 minutos de lectura
			</p>
			<h1
				class="px-4 sm:px-6 max-w-3xl mx-auto mt-4 text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-6 font-heading"
			>
				{post.title}
			</h1>
			<p class="px-4 sm:px-6 max-w-3xl mx-auto text-lg md:text-xl mb-6 text-gray-500">
				{post.excerpt}
			</p>
			<div class="mx-auto px-4 sm:px-6 max-w-3xl mt-8 mb-8 flex justify-between sm:flex-row align-center items-center">
				{
					post.author ? (
						<>
							<span class="text-gray-700 text-sm flex sm:text-lg">Por: {post.author}</span>
						</>
					) : (
						<span />
					)
				}
				<SocialShare url={url} text={post.title} class="flex align-middle text-gray-500 text-md dark:text-slate-600" />
			</div>
			{
				post.image ? (
					<Picture
						src={post.image}
						class="max-w-full lg:max-w-6xl mx-auto mt-4 mb-6 sm:rounded-md bg-gray-400 dark:bg-slate-700"
						widths={[400, 900, 1200]}
						sizes="(max-width: 1200px) 400px, 900px,1200px"
						alt={post.description || ''}
						loading="eager"
						aspectRatio={16 / 9}
					/>
				) : (
					<div class="max-w-3xl mx-auto px-4 sm:px-6">
						<div class="border-t dark:border-slate-700" />
					</div>
				)
			}
		</header>
		<div
			class="mx-auto px-6 sm:px-6 max-w-3xl prose prose-lg lg:prose-xl dark:prose-invert dark:prose-headings:text-slate-300 prose-md prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-[#3483fa] hover:prose-a:text-[#3483fa]/80 dark:prose-a:text-primary-400 prose-img:rounded-md prose-img:shadow-lg mt-8"
		>
			{
				post.Content ? (
					<>
						{/* @ts-ignore */}
						<post.Content />
					</>
				) : (
					<Fragment set:html={post.content} />
				)
			}
		</div>
		<div class="mx-auto px-6 sm:px-6 max-w-3xl mt-8 flex justify-between flex-col sm:flex-row items-center">
			<PostTags tags={post.tags} />
			<SocialShare url={url} text={post.title} class="mt-5 sm:mt-1 align-middle text-gray-500 dark:text-slate-600" />
		</div>
	</article>
</section>
